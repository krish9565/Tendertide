import requests
from datetime import datetime
from bs4 import BeautifulSoup
from pymongo import MongoClient

reqUrl = "https://notices.philgeps.gov.ph/GEPSNONPILOT/Tender/SplashOpportunitiesSearchUI.aspx?menuIndex=3&BusCatID=117&type=category&ClickFrom=OpenOpp"

headersList = {
 "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
 "Accept-Encoding": "gzip, deflate, br, zstd",
 "Accept-Language": "en-US,en;q=0.9",
 "Cache-Control": "max-age=0",
 "Connection": "keep-alive",
 "Content-Length": "18787",
 "Content-Type": "application/x-www-form-urlencoded",
 "Cookie": "PHILGEPS_AFCCORS=ff14166c2d4f35fdcb7f1ff6a1352eca; PHILGEPS_AFC=ff14166c2d4f35fdcb7f1ff6a1352eca; ASP.NET_SessionId=ttcvs013aoouta0vml5cl5yn",
 "Host": "notices.philgeps.gov.ph",
 "Origin": "https://notices.philgeps.gov.ph",
 "Referer": "https://notices.philgeps.gov.ph/GEPSNONPILOT/Tender/SplashOpportunitiesSearchUI.aspx?menuIndex=3&BusCatID=117&type=category&ClickFrom=OpenOpp",
 "Sec-Fetch-Dest": "document",
 "Sec-Fetch-Mode": "navigate",
 "Sec-Fetch-Site": "same-origin",
 "Sec-Fetch-User": "?1",
 "Upgrade-Insecure-Requests": "1",
 "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36",
 "sec-ch-ua": '"Not A(Brand";v="8", "Chromium";v="132", "Google Chrome";v="132"',
 "sec-ch-ua-mobile": "?0",
 "sec-ch-ua-platform": '"Windows"' 
}

payload = "__EVENTTARGET=pgCtrlDetailedSearch%24pageDropDownList&__EVENTARGUMENT=&__LASTFOCUS=&pgCtrlDetailedSearch%24pageDropDownList=1&txtHidden=&__VIEWSTATEGENERATOR=E3AD996F&__EVENTVALIDATION=%2FwEdAD4Ce8lM0HurwWwi229A7KAlFrKZjutyZI0k1DUFngzxLilBQLbbHYsQv1Vef%2BJVqZJzr9jVQxwE0GvPZacw1jAoEXc7RSmIxOiTZ1K8vxgJ70ZEp3ezUz4PtF9%2FZO3Ajwa8CboJTEWbWKs2XTrFEEiYkRmzScA64zHRR9eAW4P91JdtPvXb%2FsZR5RB2Pb0K6TPZC1iRqN5NQ3kqq6d9Ba7ix%2BwpMyUphAt6rQBiw9lJZnw8q1tf6ZjPnQUMNnfQc2g0R2YGA7MB6bOX%2BwXhsP181Q%2BDCNnXfsom6xzZDu4HYZ8kS5zYT4JhcV6xGKaPh7GZFcXsPZwR%2FNoedoWKEja92k1eFPk0rkgZoXA6q1h5PaAk87hRcjYLz569ht%2FT0PTc3WYUmPX5e1O1UQkkWKUzDCGXCOrr2c6hNY6sl8nY7GfQZC0J1xhI33c%2ByJT%2Fzwqe9CAunl%2Ft4VvGpx2pO7N%2BusD7zbK00Av7jmUTXAd%2FoZYYbrg1wQxxD0dlaCIbwYxp6xf7sQSfa8hfwb6FjTxiGonZXrbBrF9CW%2B56%2FG0vLNgZm69V8jykHAh9xzbnZcApdYaZwnzOQIz0KHE8jM23W%2Fh0iYNjFFGsLEsXqKX8NDEOJoaPvjZKqt9F3BeusvCLKUr%2BfD7dEFGuDxXskrIh5I2vkkZt0GWKl6daTP%2FmW8sDIF4LOhCQKNfWKjriZjfhlTZ54N4jQGOEpon5Aa3FtKb%2FG8WjGy46539q76rSdDSW5bSbbnmuaEXrvoCvUicWAWBYAQyxMmq%2B2Hi%2B24cA8km6sCjBymB45WrNf1GzqRUXpkwM0%2BJ2WxDZxQwu2yntSzjLcxG04xTV04mgDGEGfj39cKvqdTmwa8wamUzuhlHrLGe31e4fra4iCf6bVoHSPWl%2BqYGDFzpAw5fXDIY1IsxZG8FYdICCoiNV6z9YbBn4DJN5XXgdDTw1youUM4WAHRtjh9o5vnIw5Y3wODAaberyc1HhPUw745YlYMzU38DybftjcFJEBWqz%2BkpDWwi87CksIlUyCS29zL%2Flar2DZWaemjboLR2zBZIppMKGnojG9vYwiOJO3AO%2FVOUGA0KDduZc%2FjweQkVr9KUPAlgtAMIevQRCS8DLPNfHWxOC4SPshz112enV3Mf012vxzEeZm%2BW08g77fZi%2FkgOYrliqj5Ur8ySiI29VAv20ZpZBMQG55LbAUebb9hdHanTTYgc2iX066%2F3TBQ6vb1Y3%2B%2BtnntrzcL7S%2BOiNntulziQKHbqAVqezZ9ynzV%2BDzVyOkaLLGxSOwQG1SMDCyHazjsTNakJdHzsLwLkukoaQhQgKdDuJVvT5ZMKfdsDc243ZqaFkeCAt&__VIEWSTATE=%2FwEPDwUKLTEyMTc1NzUxNA9kFgICAQ9kFhRmD2QWDGYPDxYCHgRUZXh0BRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIBDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAICDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIDDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIEDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIFDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIBD2QWAgIDDw8WAh4LTmF2aWdhdGVVcmwFuQFqYXZhc2NyaXB0OnZvaWQod2luZG93Lm9wZW4oJy9HRVBTTk9OUElMT1QvaGVscHBhZ2VzL0hlbHBSZWRpcmVjdC5hc3B4JywgJ2hlbHBXaW4nLCAncmVzaXphYmxlPXllcyx0b29sYmFyPW5vLG1lbnViYXI9bm8sZGlyZWN0b3JpZXM9bm8sc3RhdHVzPW5vLHdpZHRoPTQ4MCxoZWlnaHQ9NDgwLHNjcm9sbGJhcnM9eWVzJykpO2RkAgMPDxYCHgdWaXNpYmxlaGRkAg4PFgIfAmgWAmYPZBYCAgEPZBYCAgIPDxYCHwJoZGQCEA8WAh8CZxYCZg9kFgJmD2QWAgIBDw8WAh8ABRFDYXRlcmluZyBTZXJ2aWNlc2RkAhIPFgIfAmhkAhQPDxZGHgpIYXNPTGV0dGVyaB4KSGFzQkxldHRlcmgeCkhhc1hMZXR0ZXJoHgpIYXNVTGV0dGVyaB4DcG9zAgEeB0hhc05leHRnHgpIYXNKTGV0dGVyaB4KSGFzRkxldHRlcmgeCEhhc0ZpcnN0aB4KSGFzQ0xldHRlcmgeCkhhc1JMZXR0ZXJoHgpIYXNUTGV0dGVyaB4IcGFnZVNpemUCFB4PSGFzTnVtYmVyTGV0dGVyaB4JRGF0YUNvdW50AhQeCkhhc05MZXR0ZXJoHgpIYXNWTGV0dGVyaB4KSGFzTExldHRlcmgeCkhhc0lMZXR0ZXJoHgpIYXNFTGV0dGVyaB4KSGFzWkxldHRlcmgeCkhhc1FMZXR0ZXJoHgpIYXNTTGV0dGVyaB4KSGFzV0xldHRlcmgeCkhhc01MZXR0ZXJoHgp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%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTQzMDcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTQzMDdkZAICD2QWCmYPDxYCHwAFATJkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDI4NiBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTYzMjImRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTYzMjJkZAIDD2QWCmYPDxYCHwAFATNkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM0MCBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTY4MTgmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTY4MThkZAIED2QWCmYPDxYCHwAFATRkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM0MiBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTY5NjkmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTY5NjlkZAIFD2QWCmYPDxYCHwAFATVkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDMzOSBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTcwNTQmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTcwNTRkZAIGD2QWCmYPDxYCHwAFATZkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM1NSBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTcwODUmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTcwODVkZAIHD2QWCmYPDxYCHwAFATdkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDMzOCBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTc0NjcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTc0NjdkZAIID2QWCmYPDxYCHwAFAThkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjgvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFjwFDT05UUkFDVCBJRDogMjUtMDEtMDA1ID0gUHJvY3VyZW1lbnQgb2YgQ2F0ZXJpbmcgU2VydmljZXMgaW4gWmFtYm9hbmdhIENpdHksIENhdGVyaW5nIFNlcnZpY2VzLCBERVBBUlRNRU5UIE9GIEhFQUxUSCAtIENIRCwgWkFNQk9BTkdBIFBFTklOU1VMQR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTgxNDkmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTgxNDlkZAIJD2QWCmYPDxYCHwAFATlkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjMvMDEvMjAyNSAwMTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFkAFDYXRlcmluZyBTZXJ2aWNlcyBmb3IgZm9vZHMgb24gdGhlIDMgZGF5IENvbmdyZXNzaW9uYWwgTWVldCAyMDI1LCBDYXRlcmluZyBTZXJ2aWNlcywgQlVFTkFWSVNUQSBOQVRJT05BTCBISUdIIFNDSE9PTCAtIFBSRVNFTlRBQ0lPTiBDQU1BUklORVMgU1UfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjYwOTgyJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjYwOTgyZGQCCg9kFgpmDw8WAh8ABQIxMGRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMS8wMS8yMDI1IDA5OjAwIEFNZGQCAw9kFgICAQ8PFgQfAAVLR09WLTI1LTE5LU5QKFNWKSAvIENhdGVyaW5nIG9mIG1lYWxzLCBDYXRlcmluZyBTZXJ2aWNlcywgUFJPVklOQ0UgT0YgSUxPSUxPHwEFZ1NwbGFzaEJpZE5vdGljZUFic3RyYWN0VUkuYXNweD9tZW51SW5kZXg9MyZyZWZJRD0xMTY2MTI1NyZEaXJlY3RGcm9tPU9wZW5PcHAmVHlwZT1jYXRlZ29yeSZCdXNDYXRJRD0xMTdkZAIGDw8WAh8ABQgxMTY2MTI1N2RkAgsPZBYKZg8PFgIfAAUCMTFkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjEvMDEvMjAyNSAwNTowMCBQTWRkAgMPZBYCAgEPDxYEHwAFgwFQUk9WSVNJT04gT0YgRk9PRFMgQU5EIENIQUlSUyBGT1IgVEhFIDEwN1RIIEZPVU5ESU5HIEFOTklWRVJTQVJZIENFTEVCUkFUSU9OIDIwMjUsIENhdGVyaW5nIFNlcnZpY2VzLCBNVU5JQ0lQQUxJVFkgT0YgTEEgUEFaLCBMRVlURR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjE4MzcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjE4MzdkZAIMD2QWCmYPDxYCHwAFAjEyZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIwLzAxLzIwMjUgMDg6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABeUBUHJvY3VyZW1lbnQgb2YgTWVhbHMgYW5kIHNuYWNrcyBmb3IgMjAyNSBQcm9ncmFtIGZvciBJbnRlcm5hdGlvbmFsIFN0dWRlbnQgQXNzZXNzbWVudCBMZWFybmluZyBTZXNzaW9ucywgUHJlcGFyYXRpb24sIEFjdHVhbCBQSVNBIGRheSBhbmQgUG9zdCBQSVNBIGFjdGl2aXR5LCBDYXRlcmluZyBTZXJ2aWNlcywgREVQQVJUTUVOVCBPRiBFRFVDQVRJT04gLSBESVZJU0lPTiBPRiBDQUdBWUFOIERFIE9STx8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjI4MjYmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjI4MjZkZAIND2QWCmYPDxYCHwAFAjEzZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIxLzAxLzIwMjUgMDk6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABYQCU1YtMjUtU0VSVklDRVMtRk1SLTU4MjI0LTAwMTEgUHJvdmlkZSBjYXRlcmluZyBzZXJ2aWNlcyBkdXJpbmcgdGhlICBNYW5hZ2VtZW50IENvbW1pdHRlZSBNZWV0aW5nIChNQU5DT00pIG9uIEZlYnJ1YXJ5IDAzLCAyMDI1ICYgRXhlY3V0aXZlIENvbW1pdHRlZSBNZWV0aW5nIChFWEVDT00pIG9uIEZlYnJ1YXJ5IDE3LCAyMDI1ICAgICAgQERBLVJGTyAsIENhdGVyaW5nIFNlcnZpY2VzLCBERVBBUlRNRU5UIE9GIEFHUklDVUxUVVJFIC0gUkVHSU9OIFZJSUkfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY1NzExJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY1NzExZGQCDg9kFgpmDw8WAh8ABQIxNGRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMS8wMS8yMDI1IDA5OjAwIEFNZGQCAw9kFgICAQ8PFgQfAAVJcGFja2VkIG1lYWxzIFBSLTIwMjQtMTAxNS0wMDAxMCwgQ2F0ZXJpbmcgU2VydmljZXMsIENJVFkgT0YgTUFOREFVRSwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjU3MzQmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjU3MzRkZAIPD2QWCmYPDxYCHwAFAjE1ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIxLzAxLzIwMjUgMDk6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABVpwYWNrZWQgbWVhbHMgKGJyZWFrZmFzdCkgZXRjLiBQUi0yMDI0LTk5OTktMDA1NjYsIENhdGVyaW5nIFNlcnZpY2VzLCBDSVRZIE9GIE1BTkRBVUUsIENFQlUfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY1NzUxJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY1NzUxZGQCEA9kFgpmDw8WAh8ABQIxNmRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMC8wMS8yMDI1IDAyOjAwIFBNZGQCAw9kFgICAQ8PFgQfAAWDAUNhdGVyaW5nIFNlcnZpY2VzIG9mIFRvdXIgU2l0ZSBSYXBpZCBBc3Nlc3NtZW50IGFuZCBFdmFsdWF0aW9uIGZvciBDaXR5IFRvdXJpc20gT2ZmaWNlLCBDYXRlcmluZyBTZXJ2aWNlcywgQ0lUWSAgT0YgQ0FMQkFZT0csIFNBTUFSHwEFZ1NwbGFzaEJpZE5vdGljZUFic3RyYWN0VUkuYXNweD9tZW51SW5kZXg9MyZyZWZJRD0xMTY2NjQ4NiZEaXJlY3RGcm9tPU9wZW5PcHAmVHlwZT1jYXRlZ29yeSZCdXNDYXRJRD0xMTdkZAIGDw8WAh8ABQgxMTY2NjQ4NmRkAhEPZBYKZg8PFgIfAAUCMTdkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFeE1lYWxzIGFuZCBTbmFja3MgRHVyaW5nIEtBTEFISSBDSURTUyBUcmFpbmluZyBvZiBDb21tdW5pdHkgVm9sdW50ZWVycywgQ2F0ZXJpbmcgU2VydmljZXMsIE1VTklDSVBBTElUWSBPRiBUVUJJR09OLCBCT0hPTB8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MTMmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MTNkZAISD2QWCmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABX1Gb3IgdGhlIERpc3RyaWJ1dGlvbiBvZiBTY2hvbGFyc2hpcCBmb3IgU1kgMjAyNC0yMDI1IFNlY29uZCAoaGFsZikgUmVsZWFzaW5nLCBDYXRlcmluZyBTZXJ2aWNlcywgTVVOSUNJUEFMSVRZIE9GIExJTE9BTiwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MjEmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MjFkZAITD2QWCmYPDxYCHwAFAjE5ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABX1Gb3IgdGhlIERpc3RyaWJ1dGlvbiBvZiBTY2hvbGFyc2hpcCBmb3IgU1kgMjAyNC0yMDI1IFNlY29uZCAoaGFsZikgUmVsZWFzaW5nLCBDYXRlcmluZyBTZXJ2aWNlcywgTVVOSUNJUEFMSVRZIE9GIExJTE9BTiwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MjUmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MjVkZAIUD2QWCmYPDxYCHwAFAjIwZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABYMBZm9yIE5BSVRBUyAtIE5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEluZGVwZW5kZW50IFRyYXZlbCBBZ2VuY2llcyAtIFBoaWxpcHBpbmUgSW5jLiwgQ2F0ZXJpbmcgU2VydmljZXMsIE1VTklDSVBBTElUWSBPRiBMSUxPQU4sIENFQlUfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY2NTI4JkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY2NTI4ZGQCGQ8PFgIfAmhkZAIdD2QWAgIJD2QWBAIBD2QWAgIBDw8WAh8ABU0mY29weTsmbmJzcDIwMDQtMjAyNSZuYnNwOyZuYnNwO0RCTSBQcm9jdXJlbWVudCBTZXJ2aWNlLiBBbGwgcmlnaHRzIHJlc2VydmVkLmRkAgMPZBYCZg9kFgICAw8PFgIfAQW5AWphdmFzY3JpcHQ6dm9pZCh3aW5kb3cub3BlbignL0dFUFNOT05QSUxPVC9oZWxwcGFnZXMvSGVscFJlZGlyZWN0LmFzcHgnLCAnaGVscFdpbicsICdyZXNpemFibGU9eWVzLHRvb2xiYXI9bm8sbWVudWJhcj1ubyxkaXJlY3Rvcmllcz1ubyxzdGF0dXM9bm8sd2lkdGg9NDgwLGhlaWdodD00ODAsc2Nyb2xsYmFycz15ZXMnKSk7ZGRkHQJ41QbwaOiw3aaAoGXHboTFznY%3D"

response = requests.request("POST", reqUrl, data=payload,  headers=headersList)


soup=BeautifulSoup(response.content,'html.parser')
total_pages=soup.select_one("#pgCtrlDetailedSearch > tr > td:nth-child(1) > span:nth-child(9)").text.strip()
total_pages=int(total_pages)
tender_details=[]

tender_count=1
print(f"Tender Count: {tender_count} / {total_pages*20}")
tenders=soup.select("#dgSearchResult > tr")
for tender in tenders[1:len(tenders)]:
    print("=====================================================")
    tender_title=tender.select_one("td:nth-child(4)").text.strip()
    print(f"Tender Count: {tender_count} / {total_pages*20}")
    print(f"Tender Title : {tender_title}")
    
    publication_date=tender.select_one("td:nth-child(2)").text.strip()
    publication_date=datetime.strptime(publication_date, "%d/%m/%Y").strftime("%d-%m-%Y")
    
    deadline=tender.select_one("td:nth-child(3)").text.strip().split(' ')[0]
    deadline=datetime.strptime(deadline, "%d/%m/%Y").strftime("%d-%m-%Y")
    
    tender_link=tender_title=tender.select_one("td:nth-child(4) > a").get('href')
    tender_link=f"https://notices.philgeps.gov.ph/GEPSNONPILOT/Tender/{tender_link}"
    print(f"Publication Date : {publication_date}")
    tender_count +=1
    
    print("=====================================================")
    
page=1

while page < total_pages-1:
    tender_page =page*20+1
    payload = f"__EVENTTARGET=pgCtrlDetailedSearch%24pageDropDownList&__EVENTARGUMENT=&__LASTFOCUS=&pgCtrlDetailedSearch%24pageDropDownList={tender_page}&txtHidden=&__VIEWSTATEGENERATOR=E3AD996F&__EVENTVALIDATION=%2FwEdAD4Ce8lM0HurwWwi229A7KAlFrKZjutyZI0k1DUFngzxLilBQLbbHYsQv1Vef%2BJVqZJzr9jVQxwE0GvPZacw1jAoEXc7RSmIxOiTZ1K8vxgJ70ZEp3ezUz4PtF9%2FZO3Ajwa8CboJTEWbWKs2XTrFEEiYkRmzScA64zHRR9eAW4P91JdtPvXb%2FsZR5RB2Pb0K6TPZC1iRqN5NQ3kqq6d9Ba7ix%2BwpMyUphAt6rQBiw9lJZnw8q1tf6ZjPnQUMNnfQc2g0R2YGA7MB6bOX%2BwXhsP181Q%2BDCNnXfsom6xzZDu4HYZ8kS5zYT4JhcV6xGKaPh7GZFcXsPZwR%2FNoedoWKEja92k1eFPk0rkgZoXA6q1h5PaAk87hRcjYLz569ht%2FT0PTc3WYUmPX5e1O1UQkkWKUzDCGXCOrr2c6hNY6sl8nY7GfQZC0J1xhI33c%2ByJT%2Fzwqe9CAunl%2Ft4VvGpx2pO7N%2BusD7zbK00Av7jmUTXAd%2FoZYYbrg1wQxxD0dlaCIbwYxp6xf7sQSfa8hfwb6FjTxiGonZXrbBrF9CW%2B56%2FG0vLNgZm69V8jykHAh9xzbnZcApdYaZwnzOQIz0KHE8jM23W%2Fh0iYNjFFGsLEsXqKX8NDEOJoaPvjZKqt9F3BeusvCLKUr%2BfD7dEFGuDxXskrIh5I2vkkZt0GWKl6daTP%2FmW8sDIF4LOhCQKNfWKjriZjfhlTZ54N4jQGOEpon5Aa3FtKb%2FG8WjGy46539q76rSdDSW5bSbbnmuaEXrvoCvUicWAWBYAQyxMmq%2B2Hi%2B24cA8km6sCjBymB45WrNf1GzqRUXpkwM0%2BJ2WxDZxQwu2yntSzjLcxG04xTV04mgDGEGfj39cKvqdTmwa8wamUzuhlHrLGe31e4fra4iCf6bVoHSPWl%2BqYGDFzpAw5fXDIY1IsxZG8FYdICCoiNV6z9YbBn4DJN5XXgdDTw1youUM4WAHRtjh9o5vnIw5Y3wODAaberyc1HhPUw745YlYMzU38DybftjcFJEBWqz%2BkpDWwi87CksIlUyCS29zL%2Flar2DZWaemjboLR2zBZIppMKGnojG9vYwiOJO3AO%2FVOUGA0KDduZc%2FjweQkVr9KUPAlgtAMIevQRCS8DLPNfHWxOC4SPshz112enV3Mf012vxzEeZm%2BW08g77fZi%2FkgOYrliqj5Ur8ySiI29VAv20ZpZBMQG55LbAUebb9hdHanTTYgc2iX066%2F3TBQ6vb1Y3%2B%2BtnntrzcL7S%2BOiNntulziQKHbqAVqezZ9ynzV%2BDzVyOkaLLGxSOwQG1SMDCyHazjsTNakJdHzsLwLkukoaQhQgKdDuJVvT5ZMKfdsDc243ZqaFkeCAt&__VIEWSTATE=%2FwEPDwUKLTEyMTc1NzUxNA9kFgICAQ9kFhRmD2QWDGYPDxYCHgRUZXh0BRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIBDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAICDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIDDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIEDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIFDw8WAh8ABRhGcmlkYXksIEphbnVhcnkgMTcsIDIwMjVkZAIBD2QWAgIDDw8WAh4LTmF2aWdhdGVVcmwFuQFqYXZhc2NyaXB0OnZvaWQod2luZG93Lm9wZW4oJy9HRVBTTk9OUElMT1QvaGVscHBhZ2VzL0hlbHBSZWRpcmVjdC5hc3B4JywgJ2hlbHBXaW4nLCAncmVzaXphYmxlPXllcyx0b29sYmFyPW5vLG1lbnViYXI9bm8sZGlyZWN0b3JpZXM9bm8sc3RhdHVzPW5vLHdpZHRoPTQ4MCxoZWlnaHQ9NDgwLHNjcm9sbGJhcnM9eWVzJykpO2RkAgMPDxYCHgdWaXNpYmxlaGRkAg4PFgIfAmgWAmYPZBYCAgEPZBYCAgIPDxYCHwJoZGQCEA8WAh8CZxYCZg9kFgJmD2QWAgIBDw8WAh8ABRFDYXRlcmluZyBTZXJ2aWNlc2RkAhIPFgIfAmhkAhQPDxZGHgpIYXNPTGV0dGVyaB4KSGFzQkxldHRlcmgeCkhhc1hMZXR0ZXJoHgpIYXNVTGV0dGVyaB4DcG9zAgEeB0hhc05leHRnHgpIYXNKTGV0dGVyaB4KSGFzRkxldHRlcmgeCEhhc0ZpcnN0aB4KSGFzQ0xldHRlcmgeCkhhc1JMZXR0ZXJoHgpIYXNUTGV0dGVyaB4IcGFnZVNpemUCFB4PSGFzTnVtYmVyTGV0dGVyaB4JRGF0YUNvdW50AhQeCkhhc05MZXR0ZXJoHgpIYXNWTGV0dGVyaB4KSGFzTExldHRlcmgeCkhhc0lMZXR0ZXJoHgpIYXNFTGV0dGVyaB4KSGFzWkxldHRlcmgeCkhhc1FMZXR0ZXJoHgpIYXNTTGV0dGVyaB4KSGFzV0xldHRlcmgeCkhhc01MZXR0ZXJoHgp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%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTQzMDcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTQzMDdkZAICD2QWCmYPDxYCHwAFATJkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDI4NiBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTYzMjImRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTYzMjJkZAIDD2QWCmYPDxYCHwAFATNkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM0MCBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTY4MTgmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTY4MThkZAIED2QWCmYPDxYCHwAFATRkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM0MiBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTY5NjkmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTY5NjlkZAIFD2QWCmYPDxYCHwAFATVkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDMzOSBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTcwNTQmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTcwNTRkZAIGD2QWCmYPDxYCHwAFATZkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDM1NSBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTcwODUmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTcwODVkZAIHD2QWCmYPDxYCHwAFATdkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFSDIwMjUtMDEtMDMzOCBQcm9jdXJlbWVudCBvZiBGb29kcywgQ2F0ZXJpbmcgU2VydmljZXMsIFBST1ZJTkNFIE9GIFFVRVpPTh8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTc0NjcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTc0NjdkZAIID2QWCmYPDxYCHwAFAThkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjgvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFjwFDT05UUkFDVCBJRDogMjUtMDEtMDA1ID0gUHJvY3VyZW1lbnQgb2YgQ2F0ZXJpbmcgU2VydmljZXMgaW4gWmFtYm9hbmdhIENpdHksIENhdGVyaW5nIFNlcnZpY2VzLCBERVBBUlRNRU5UIE9GIEhFQUxUSCAtIENIRCwgWkFNQk9BTkdBIFBFTklOU1VMQR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NTgxNDkmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NTgxNDlkZAIJD2QWCmYPDxYCHwAFATlkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjMvMDEvMjAyNSAwMTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFkAFDYXRlcmluZyBTZXJ2aWNlcyBmb3IgZm9vZHMgb24gdGhlIDMgZGF5IENvbmdyZXNzaW9uYWwgTWVldCAyMDI1LCBDYXRlcmluZyBTZXJ2aWNlcywgQlVFTkFWSVNUQSBOQVRJT05BTCBISUdIIFNDSE9PTCAtIFBSRVNFTlRBQ0lPTiBDQU1BUklORVMgU1UfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjYwOTgyJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjYwOTgyZGQCCg9kFgpmDw8WAh8ABQIxMGRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMS8wMS8yMDI1IDA5OjAwIEFNZGQCAw9kFgICAQ8PFgQfAAVLR09WLTI1LTE5LU5QKFNWKSAvIENhdGVyaW5nIG9mIG1lYWxzLCBDYXRlcmluZyBTZXJ2aWNlcywgUFJPVklOQ0UgT0YgSUxPSUxPHwEFZ1NwbGFzaEJpZE5vdGljZUFic3RyYWN0VUkuYXNweD9tZW51SW5kZXg9MyZyZWZJRD0xMTY2MTI1NyZEaXJlY3RGcm9tPU9wZW5PcHAmVHlwZT1jYXRlZ29yeSZCdXNDYXRJRD0xMTdkZAIGDw8WAh8ABQgxMTY2MTI1N2RkAgsPZBYKZg8PFgIfAAUCMTFkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjEvMDEvMjAyNSAwNTowMCBQTWRkAgMPZBYCAgEPDxYEHwAFgwFQUk9WSVNJT04gT0YgRk9PRFMgQU5EIENIQUlSUyBGT1IgVEhFIDEwN1RIIEZPVU5ESU5HIEFOTklWRVJTQVJZIENFTEVCUkFUSU9OIDIwMjUsIENhdGVyaW5nIFNlcnZpY2VzLCBNVU5JQ0lQQUxJVFkgT0YgTEEgUEFaLCBMRVlURR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjE4MzcmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjE4MzdkZAIMD2QWCmYPDxYCHwAFAjEyZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIwLzAxLzIwMjUgMDg6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABeUBUHJvY3VyZW1lbnQgb2YgTWVhbHMgYW5kIHNuYWNrcyBmb3IgMjAyNSBQcm9ncmFtIGZvciBJbnRlcm5hdGlvbmFsIFN0dWRlbnQgQXNzZXNzbWVudCBMZWFybmluZyBTZXNzaW9ucywgUHJlcGFyYXRpb24sIEFjdHVhbCBQSVNBIGRheSBhbmQgUG9zdCBQSVNBIGFjdGl2aXR5LCBDYXRlcmluZyBTZXJ2aWNlcywgREVQQVJUTUVOVCBPRiBFRFVDQVRJT04gLSBESVZJU0lPTiBPRiBDQUdBWUFOIERFIE9STx8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjI4MjYmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjI4MjZkZAIND2QWCmYPDxYCHwAFAjEzZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIxLzAxLzIwMjUgMDk6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABYQCU1YtMjUtU0VSVklDRVMtRk1SLTU4MjI0LTAwMTEgUHJvdmlkZSBjYXRlcmluZyBzZXJ2aWNlcyBkdXJpbmcgdGhlICBNYW5hZ2VtZW50IENvbW1pdHRlZSBNZWV0aW5nIChNQU5DT00pIG9uIEZlYnJ1YXJ5IDAzLCAyMDI1ICYgRXhlY3V0aXZlIENvbW1pdHRlZSBNZWV0aW5nIChFWEVDT00pIG9uIEZlYnJ1YXJ5IDE3LCAyMDI1ICAgICAgQERBLVJGTyAsIENhdGVyaW5nIFNlcnZpY2VzLCBERVBBUlRNRU5UIE9GIEFHUklDVUxUVVJFIC0gUkVHSU9OIFZJSUkfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY1NzExJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY1NzExZGQCDg9kFgpmDw8WAh8ABQIxNGRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMS8wMS8yMDI1IDA5OjAwIEFNZGQCAw9kFgICAQ8PFgQfAAVJcGFja2VkIG1lYWxzIFBSLTIwMjQtMTAxNS0wMDAxMCwgQ2F0ZXJpbmcgU2VydmljZXMsIENJVFkgT0YgTUFOREFVRSwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjU3MzQmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjU3MzRkZAIPD2QWCmYPDxYCHwAFAjE1ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIxLzAxLzIwMjUgMDk6MDAgQU1kZAIDD2QWAgIBDw8WBB8ABVpwYWNrZWQgbWVhbHMgKGJyZWFrZmFzdCkgZXRjLiBQUi0yMDI0LTk5OTktMDA1NjYsIENhdGVyaW5nIFNlcnZpY2VzLCBDSVRZIE9GIE1BTkRBVUUsIENFQlUfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY1NzUxJkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY1NzUxZGQCEA9kFgpmDw8WAh8ABQIxNmRkAgEPDxYCHwAFCjE3LzAxLzIwMjVkZAICDw8WAh8ABRMyMC8wMS8yMDI1IDAyOjAwIFBNZGQCAw9kFgICAQ8PFgQfAAWDAUNhdGVyaW5nIFNlcnZpY2VzIG9mIFRvdXIgU2l0ZSBSYXBpZCBBc3Nlc3NtZW50IGFuZCBFdmFsdWF0aW9uIGZvciBDaXR5IFRvdXJpc20gT2ZmaWNlLCBDYXRlcmluZyBTZXJ2aWNlcywgQ0lUWSAgT0YgQ0FMQkFZT0csIFNBTUFSHwEFZ1NwbGFzaEJpZE5vdGljZUFic3RyYWN0VUkuYXNweD9tZW51SW5kZXg9MyZyZWZJRD0xMTY2NjQ4NiZEaXJlY3RGcm9tPU9wZW5PcHAmVHlwZT1jYXRlZ29yeSZCdXNDYXRJRD0xMTdkZAIGDw8WAh8ABQgxMTY2NjQ4NmRkAhEPZBYKZg8PFgIfAAUCMTdkZAIBDw8WAh8ABQoxNy8wMS8yMDI1ZGQCAg8PFgIfAAUTMjAvMDEvMjAyNSAwOTowMCBBTWRkAgMPZBYCAgEPDxYEHwAFeE1lYWxzIGFuZCBTbmFja3MgRHVyaW5nIEtBTEFISSBDSURTUyBUcmFpbmluZyBvZiBDb21tdW5pdHkgVm9sdW50ZWVycywgQ2F0ZXJpbmcgU2VydmljZXMsIE1VTklDSVBBTElUWSBPRiBUVUJJR09OLCBCT0hPTB8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MTMmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MTNkZAISD2QWCmYPDxYCHwAFAjE4ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABX1Gb3IgdGhlIERpc3RyaWJ1dGlvbiBvZiBTY2hvbGFyc2hpcCBmb3IgU1kgMjAyNC0yMDI1IFNlY29uZCAoaGFsZikgUmVsZWFzaW5nLCBDYXRlcmluZyBTZXJ2aWNlcywgTVVOSUNJUEFMSVRZIE9GIExJTE9BTiwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MjEmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MjFkZAITD2QWCmYPDxYCHwAFAjE5ZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABX1Gb3IgdGhlIERpc3RyaWJ1dGlvbiBvZiBTY2hvbGFyc2hpcCBmb3IgU1kgMjAyNC0yMDI1IFNlY29uZCAoaGFsZikgUmVsZWFzaW5nLCBDYXRlcmluZyBTZXJ2aWNlcywgTVVOSUNJUEFMSVRZIE9GIExJTE9BTiwgQ0VCVR8BBWdTcGxhc2hCaWROb3RpY2VBYnN0cmFjdFVJLmFzcHg%2FbWVudUluZGV4PTMmcmVmSUQ9MTE2NjY1MjUmRGlyZWN0RnJvbT1PcGVuT3BwJlR5cGU9Y2F0ZWdvcnkmQnVzQ2F0SUQ9MTE3ZGQCBg8PFgIfAAUIMTE2NjY1MjVkZAIUD2QWCmYPDxYCHwAFAjIwZGQCAQ8PFgIfAAUKMTcvMDEvMjAyNWRkAgIPDxYCHwAFEzIzLzAxLzIwMjUgMDI6MDAgUE1kZAIDD2QWAgIBDw8WBB8ABYMBZm9yIE5BSVRBUyAtIE5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEluZGVwZW5kZW50IFRyYXZlbCBBZ2VuY2llcyAtIFBoaWxpcHBpbmUgSW5jLiwgQ2F0ZXJpbmcgU2VydmljZXMsIE1VTklDSVBBTElUWSBPRiBMSUxPQU4sIENFQlUfAQVnU3BsYXNoQmlkTm90aWNlQWJzdHJhY3RVSS5hc3B4P21lbnVJbmRleD0zJnJlZklEPTExNjY2NTI4JkRpcmVjdEZyb209T3Blbk9wcCZUeXBlPWNhdGVnb3J5JkJ1c0NhdElEPTExN2RkAgYPDxYCHwAFCDExNjY2NTI4ZGQCGQ8PFgIfAmhkZAIdD2QWAgIJD2QWBAIBD2QWAgIBDw8WAh8ABU0mY29weTsmbmJzcDIwMDQtMjAyNSZuYnNwOyZuYnNwO0RCTSBQcm9jdXJlbWVudCBTZXJ2aWNlLiBBbGwgcmlnaHRzIHJlc2VydmVkLmRkAgMPZBYCZg9kFgICAw8PFgIfAQW5AWphdmFzY3JpcHQ6dm9pZCh3aW5kb3cub3BlbignL0dFUFNOT05QSUxPVC9oZWxwcGFnZXMvSGVscFJlZGlyZWN0LmFzcHgnLCAnaGVscFdpbicsICdyZXNpemFibGU9eWVzLHRvb2xiYXI9bm8sbWVudWJhcj1ubyxkaXJlY3Rvcmllcz1ubyxzdGF0dXM9bm8sd2lkdGg9NDgwLGhlaWdodD00ODAsc2Nyb2xsYmFycz15ZXMnKSk7ZGRkHQJ41QbwaOiw3aaAoGXHboTFznY%3D"
    response = requests.request("POST", reqUrl, data=payload,  headers=headersList)
    soup=BeautifulSoup(response.content,'html.parser')
    
    tenders=soup.select("#dgSearchResult > tr")
    for tender in tenders[1:len(tenders)]:
        print("=====================================================")
        tender_title=tender.select_one("td:nth-child(4)").text.strip()
        print(f"Tender Count: {tender_count} / {total_pages*20}")
        print(f"Tender Title : {tender_title}")
        
        publication_date=tender.select_one("td:nth-child(2)").text.strip()
        print(f"Publication Date : {publication_date}")
        tender_count +=1
        
        print("=====================================================")
        
        
        tender_document = {
        "tender_number": "",
        "publication_date": publication_date,
        "deadline": "",
        "tender_title": tender_title,
        "tender_link": tender_link,
        "country": "Philippone"
        
        }
        tender_details.append(tender_document)
    page +=1
client = MongoClient('mongodb://localhost:27017/') 
db = client["newDB2"]
collection = db["users"]

inser_count=1
duplicate_count=1
for tender_detail in tender_details:
    existing_document = collection.find_one({"tender_link": tender_detail["tender_link"]})

    if existing_document:
        print("Duplicate detected. This tender_link already exists in the database.")
        print(f"{duplicate_count } duplicate row rejected")
        duplicate_count +=1
    else:
        
        collection.insert_one(tender_detail)
        print("Document inserted successfully.")
        print(f"{inser_count } row inserted")
        inser_count +=1
        print("Data inserted successfully!")